* init-package.el
:PROPERTIES:
:HEADER-ARGS: :tangle (concat temporary-file-directory "init-package.el") :lexical t
:END:

** Headers
#+begin_src emacs-lisp
  ;;; init-package.el ---   -*- lexical-binding: t; -*-
  ;; -*- no-byte-compile: t; -*-
  ;;; Commentary:

  ;;; Code :
#+end_src

** Init Package
#+begin_src emacs-lisp
  ;; Initialize package sources
  (require 'package)
  ;; Package initialize occurs automatically, before `user-init-file' is
  ;; loaded, but after `early-init-file'. We handle package
  ;; initialization, so we must prevent Emacs from doing it early!
  (setq package-enable-at-startup nil)

  (setq package-user-dir (expand-file-name "elpa" user-emacs-directory))

  (setq package-archives '(("melpa" . "http://mirrors.tuna.tsinghua.edu.cn/elpa/melpa/")
                           ;;("org" . "http://mirrors.tuna.tsinghua.edu.cn/elpa/org/")
                           ("nongnu" . "http://mirrors.tuna.tsinghua.edu.cn/elpa/nongnu/")
                           ("gnu" . "http://mirrors.tuna.tsinghua.edu.cn/elpa/gnu/")
                           ))

  (package-initialize)

  ;(unless package-archive-contents
  ;  (package-refresh-contents))
#+end_src

** Use-package
#+begin_src emacs-lisp
  (unless (package-installed-p 'use-package)
    (package-refresh-contents)
    (package-install 'use-package))

  (eval-when-compile
    (require 'use-package))

  ;; set `use-package' variables
  (setq use-package-always-ensure t
        use-package-always-defer nil
        use-package-always-demand nil
        use-package-expand-minimally t
        use-package-verbose t)

  ;; Update GPG keyring for GNU ELPA
  (use-package gnu-elpa-keyring-update)
#+end_src

** quelpa
用于下载 github 上的包。
#+begin_src emacs-lisp
  (use-package quelpa
    :ensure t
    :defer t
    :config  
    (setq quelpa-upgrade-p nil
          quelpa-update-melpa-p nil)
    )

#+end_src

用于集成到 use-package 上。
#+begin_src emacs-lisp
  (quelpa
   '(quelpa-use-package
     :fetcher git
     :url "https://github.com/quelpa/quelpa-use-package.git"))
  (require 'quelpa-use-package)
#+end_src

** package utils
主要用于下载和更新包，自动更新时可以删除冗余包。
#+begin_src emacs-lisp
  (use-package package-utils
    :ensure t
    :commands
    (package-utils-upgrade-all
     package-utils-list-upgrades
     package-utils-upgrade-by-name
     package-utils-remove-by-name
     package-utils-upgrade-all-and-quit
     package-utils-upgrade-all-and-restart
     package-utils-upgrade-all-and-recompile)
    )
#+end_src

** Auto update packages
#+begin_src emacs-lisp
  ;; Auto update packages
  (unless (fboundp 'package-upgrade-all)
    (use-package auto-package-update
      :defer t
      :init
      (setq auto-package-update-delete-old-versions t
              auto-package-update-hide-results t)
      (defalias 'upgrade-packages #'auto-package-update-now)))
#+end_src

** Ends
#+begin_src emacs-lisp
  (provide 'init-package)
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;;; init-package.el ends here
#+end_src
